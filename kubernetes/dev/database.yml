---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: database-init
data:
  init.sql: |
    CREATE USER 'wordpress1'@'%' IDENTIFIED BY 'secretword';
    CREATE DATABASE wordpress1;
    GRANT ALL PRIVILEGES ON wordpress1.* TO 'wordpress1'@'%';

    CREATE USER 'wordpress2'@'%' IDENTIFIED BY 'secretword';
    CREATE DATABASE wordpress2;
    GRANT ALL PRIVILEGES ON wordpress2.* TO 'wordpress2'@'%';

    CREATE USER 'wordpress3'@'%' IDENTIFIED BY 'secretword';
    CREATE DATABASE wordpress3;
    GRANT ALL PRIVILEGES ON wordpress3.* TO 'wordpress3'@'%';

    FLUSH PRIVILEGES;
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              value: secretword
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
              subPath: data
            - name: init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init
          configMap:
            name: database-init